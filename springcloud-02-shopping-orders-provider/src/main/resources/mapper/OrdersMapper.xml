<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springcloud.dao.OrdersMapper">
	<resultMap id="BaseResultMap"
		type="com.springcloud.entity.Orders">
		<id column="order_id" jdbcType="INTEGER" property="orderId" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="receiver_name" jdbcType="VARCHAR"
			property="receiverName" />
		<result column="receiver_tel" jdbcType="CHAR"
			property="receiverTel" />
		<result column="receiver_addr" jdbcType="VARCHAR"
			property="receiverAddr" />
		<result column="order_time" jdbcType="TIMESTAMP"
			property="orderTime" />
		<result column="order_total" jdbcType="DOUBLE"
			property="orderTotal" />
		<result column="order_status" jdbcType="VARCHAR"
			property="orderStatus" />
	</resultMap>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from orders
		where order_id =
		#{orderId,jdbcType=INTEGER}
	</delete>
	<!-- useGeneratedKeys="true":表示使用useGeneratedKeys()方法获得自增长键的值 -->
	<!-- keyProperty="orderId":当获取到自增长主键的值时，将值存入实体类指定的成员变量中 -->
	<insert id="insert" useGeneratedKeys="true"
		keyProperty="orderId" parameterType="com.springcloud.entity.Orders">
		insert into orders (user_id,
		receiver_name,
		receiver_tel,
		receiver_addr, order_time,
		order_total,
		order_status)
		values (#{userId,jdbcType=INTEGER},
		#{receiverName,jdbcType=VARCHAR},
		#{receiverTel,jdbcType=CHAR}, #{
		receiverAddr,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP},
		#{orderTotal,jdbcType=DOUBLE}, #{orderStatus,jdbcType=VARCHAR})
	</insert>
	<update id="updateByPrimaryKey"
		parameterType="com.springcloud.entity.Orders">
		update orders
		set user_id = #{userId,jdbcType=INTEGER},
		receiver_name = #{receiverName,jdbcType=VARCHAR},
		receiver_tel =
		#{receiverTel,jdbcType=CHAR},
		receiver_addr = #{
		receiverAddr,jdbcType=VARCHAR},
		order_time =
		#{orderTime,jdbcType=TIMESTAMP},
		order_total =
		#{orderTotal,jdbcType=DOUBLE},
		order_status =
		#{orderStatus,jdbcType=VARCHAR}
		where order_id =
		#{orderId,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select order_id, user_id,
		receiver_name, receiver_tel,
		receiver_addr, order_time,
		order_total,
		order_status
		from orders
		where order_id = #{orderId,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select order_id, user_id,
		receiver_name, receiver_tel,
		receiver_addr, order_time,
		order_total,
		order_status
		from orders
	</select>

	<!-- 查询orders表中满足条件的订单信息 -->
	<select id="selectOrders"
		parameterType="com.springcloud.entity.Orders"
		resultMap="OrdersResultMap">
		select o.order_id,o.user_id,o.receiver_name,o.receiver_tel,
		o.receiver_addr,o.order_time,o.order_total,o.order_status,u.user_name,u.user_tel
		from orders o join users u on o.user_id=u.user_id
		<!-- 当第一个条件前面为and或or时，使用where替换条件中的and或or -->
		<trim prefix="where" prefixOverrides="and|or">
			<if
				test="user!=null and user.userName!='%%' and user.userName!='%null%'">
				u.user_name like #{user.userName}
			</if>
			<if test="orderDateMin!=null and orderDateMax!=null">
				and o.order_time between #{orderDateMin} and
				#{orderDateMax}
			</if>
			<if test="orderStatus!=-1">
				and o.order_status=#{orderStatus}
			</if>
		</trim>
	</select>
	<!-- 将select语句结果中的列存入实体类对应的成员变量（属性）中 -->
	<resultMap type="com.springcloud.entity.Orders"
		id="OrdersResultMap">
		<id column="order_id" property="orderId" />
		<result column="receiver_name" property="receiverName" />
		<result column="receiver_tel" property="receiverTel" />
		<result column="receiver_addr" property="receiverAddr" />
		<result column="order_time" property="orderTime" />
		<result column="order_status" property="orderStatus" />
		<result column="order_total" property="orderTotal" />
		<association property="user"
			javaType="com.springcloud.entity.Users">
			<id column="user_id" property="userId" />
			<result column="user_name" property="userName" />
			<result column="user_tel" property="userTel" />
		</association>
	</resultMap>
	<!-- 修改orders表中制定order_id的订单状态 -->
	<update id="updateOrdersStatus"
		parameterType="com.springcloud.entity.Orders">
		update orders set order_status=#{orderStatus}
		where
		order_id=#{orderId}
	</update>

	<!-- 查询指定日期范围内的销售额 -->
	<select id="selectGroup"
		parameterType="com.springcloud.entity.Orders"
		resultMap="ordersGroupMap">
		select
		date_format(order_time,'%Y-%m') as
		order_month,sum(od.goods_final_num*od.goods_final_price)
		as order_price
		from orders o join order_details od on
		o.order_id=od.order_id
		where
		date_format(order_time,'%Y-%m') between #{startMonth} and
		#{endMonth}
		group
		by date_format(order_time,'%Y-%m')
		order by 1 asc
	</select>

	<resultMap type="com.springcloud.entity.Orders"
		id="ordersGroupMap">
		<result column="order_month" property="orderMonth"></result>
		<result column="order_price" property="orderPrice"></result>
	</resultMap>

	<!-- 查询orders表中指定user_id的订单信息 -->
	<select id="selectByUserId" parameterType="java.lang.Integer"
		resultMap="OrdersMap">
		select order_id, user_id,
		receiver_name, receiver_tel,
		receiver_addr, order_time,
		order_total,
		order_status
		from orders
		where
		user_id=#{userId}
	</select>

	<resultMap id="OrdersMap"
		type="com.springcloud.entity.Orders">
		<id column="order_id" jdbcType="INTEGER" property="orderId" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="receiver_name" jdbcType="VARCHAR"
			property="receiverName" />
		<result column="receiver_tel" jdbcType="CHAR"
			property="receiverTel" />
		<result column="receiver_addr" jdbcType="VARCHAR"
			property="receiverAddr" />
		<result column="order_time" jdbcType="TIMESTAMP"
			property="orderTime" />
		<result column="order_total" jdbcType="DOUBLE"
			property="orderTotal" />
		<result column="order_status" jdbcType="VARCHAR"
			property="orderStatus" />
		<!-- 用于封装当前订单明细的集合 -->
		<!-- property:设置实体类中集合类型的成员变量 -->
		<!-- select:集合的数据来自于指定id的select标签的结果 -->
		<!-- column:将查询结果中指定列的值作为参数传递到select属性指定的select标签中 -->
		<collection property="orderDetailsList"
			select="selectOrderDetailsByOrderId" column="order_id">
		</collection>
	</resultMap>

	<select id="selectOrderDetailsByOrderId"
		parameterType="java.lang.Integer"
		resultType="com.springcloud.entity.OrderDetails">
		select order_detail_id, order_id, goods_id, goods_name,
		goods_final_price,
		goods_final_num
		from order_details
		where
		order_id=#{orderId}
	</select>

</mapper>